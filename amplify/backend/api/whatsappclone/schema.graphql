type User @model {
  id: ID!
  name: String!
  imageUri: String
  status: String
  chatRoomUsers: [ChatRoomUser] @connection(keyName: "byUser", fields: ["id"])
}

# This is necessary as ChatRoom to User is a many-to-many relationship
# We need to incorporate a new model to make the relationship
# key fields: [primaryID, sortableID]
type ChatRoomUser @model 
@key(name: "byUser", fields: ["userID", "chatRoomID"])
@key(name: "byChatRoom", fields: ["chatRoomID", "userID"]) 
{
  id: ID!
  userID: ID!
  chatRoomID: ID!
  user: User @connection(fields: ["userID"])
  chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
}

type ChatRoom @model {
  id: ID!
  # list of users to support groups
  # this is a many-to-many relationship
  chatRoomUsers: [ChatRoomUser] @connection(keyName: "byChatRoom", fields: ["id"])
  messages: [Message] @connection(keyName: "byChatRoom", fields: ["id"])
}

type Message @model 
@key(name: "byChatRoom", fields: ["chatRoomID", "createdAt"], queryField: "messagesByChatRoom")
{
  id: ID!
  createdAt: String!
  content: String!
  userID: ID!
  chatRoomID: ID!
  user: User @connection(fields: ["userID"])
  chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
}